{"version":3,"sources":["Components/Section/Section.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","App.js","index.js","Components/Statistics/Statistics.module.css","Components/Section/Section.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Notification/Notification.module.css"],"names":["Section","title","children","className","style","section","FeedbackOptions","options","onLeaveFeedback","feedback","map","option","type","onClick","button","Statistics","good","neutral","bad","total","positivePercentage","statisticsList","statisticsElement","Notification","message","notification","App","useState","setGood","setNeutral","setBad","useEffect","countTotalFeedback","totalFeedback","positiveFeedbackPercentage","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAiBeA,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKC,UAAWC,IAAMC,QAAtB,UACE,oBAAIF,UAAWC,IAAMH,MAArB,SAA6BA,IAC5BC,M,gBCmBQI,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKL,UAAWC,IAAMK,SAAtB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLC,QAAS,WACPL,EAAgBG,IAElBR,UAAWC,IAAMU,OANnB,SAQGH,GAPIA,S,gBCmBAI,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,8BACE,qBAAIjB,UAAWC,IAAMiB,eAArB,UACE,qBAAIlB,UAAWC,IAAMkB,kBAArB,mBAA+CN,KAC/C,qBAAIb,UAAWC,IAAMkB,kBAArB,sBAAkDL,KAClD,qBAAId,UAAWC,IAAMkB,kBAArB,kBAA8CJ,KAC9C,qBAAIf,UAAWC,IAAMkB,kBAArB,oBAAgDH,KAChD,qBAAIhB,UAAWC,IAAMkB,kBAArB,gCACsBF,EADtB,c,gBCAOG,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGrB,UAAWC,IAAMqB,aAApB,SAAmCD,KCGtB,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOV,EAAP,KAAgBY,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOT,EAAP,KAAYY,EAAZ,KAEAC,qBAAU,eAEV,IAgBMC,EAAqB,WAEzB,OADoBhB,EAAOC,EAAUC,GAenCe,EAAgBD,IAChBE,EAZoC,WACtC,IAAIf,EAAQa,IACRE,EAA6B,EAMjC,OAJIlB,IACFkB,EAAqC,IAAPlB,EAAcG,GAGvCgB,KAAKC,MAAMF,GAIaG,GAEjC,OACE,qCACE,cAAC,EAAD,CAASpC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAxCc,SAAAC,GACpB,OAAQA,GACN,IAAK,OACH,OAAOmB,EAAQZ,EAAO,GAExB,IAAK,UACH,OAAOa,EAAWZ,EAAU,GAE9B,IAAK,MACH,OAAOa,EAAOZ,EAAM,SAmCtB,cAAC,EAAD,CAASjB,MAAO,aAAhB,SACIgC,EAGA,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,EACPb,mBAAoBc,IAPtB,cAAC,EAAD,CAAcV,QAAQ,2B,MCvDhCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFe,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,kBAAoB,wC,kBCA1FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,SAAW,kCAAkC,OAAS,kC,kBCAxED,EAAOC,QAAU,CAAC,aAAe,sC","file":"static/js/main.9961e763.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport style from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={style.section}>\n      <h2 className={style.title}>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport style from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={style.feedback}>\n      {options.map(option => (\n        <button\n          key={option}\n          type=\"button\"\n          onClick={() => {\n            onLeaveFeedback(option);\n          }}\n          className={style.button}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport style from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <ul className={style.statisticsList}>\n        <li className={style.statisticsElement}>Good: {good}</li>\n        <li className={style.statisticsElement}>Neutral: {neutral}</li>\n        <li className={style.statisticsElement}>Bad: {bad}</li>\n        <li className={style.statisticsElement}>Total: {total}</li>\n        <li className={style.statisticsElement}>\n          Positive feedback: {positivePercentage} %\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport style from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <p className={style.notification}>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState, useEffect } from 'react';\n\nimport Section from './Components/Section';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Statistics from './Components/Statistics';\nimport Notification from './Components/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  useEffect(() => {});\n\n  const leaveFeedback = feedback => {\n    switch (feedback) {\n      case 'good':\n        return setGood(good + 1);\n\n      case 'neutral':\n        return setNeutral(neutral + 1);\n\n      case 'bad':\n        return setBad(bad + 1);\n\n      default:\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    let totalFeedback = good + neutral + bad;\n    return totalFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    let total = countTotalFeedback();\n    let positiveFeedbackPercentage = 0;\n\n    if (good) {\n      positiveFeedbackPercentage = (good * 100) / total;\n    }\n\n    return Math.round(positiveFeedbackPercentage);\n  };\n\n  let totalFeedback = countTotalFeedback();\n  let positiveFeedbackPercentage = countPositiveFeedbackPercentage();\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={leaveFeedback}\n        />\n      </Section>\n\n      <Section title={'Statistics'}>\n        {!totalFeedback ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={positiveFeedbackPercentage}\n          />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__1vZLi\",\"statisticsElement\":\"Statistics_statisticsElement__Qvyg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3Dth8\",\"title\":\"Section_title__2LY9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"FeedbackOptions_feedback__1x3yR\",\"button\":\"FeedbackOptions_button__LtU-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__NoHrr\"};"],"sourceRoot":""}